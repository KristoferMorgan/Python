
#

# lambda - анонимные функции
# Включения - генератор list comprehension
# map - применяет функцию с выражением к элементам
# filter - применяет фкункцию с логическим выражением к элементам
# zip - комбинирует коллекции
# enimerate - нумерует



# f= lambda x: x**2


# def f(x):
#    return x**2
#my_list = [1,415,65,346]

#for item in my_list:
#    print(f(item),end='')

# new_f = lambda x:True if (x > 10) else False

# new_f = lambda x: x**2
# my_list = [1,123,414,213]
# res = list(map(new_f,my_list))
# print(res)


# my_list = [i for i in range(20) if i > 10]
# print(my_list)
# что делать с условием
# res = [i for in ranga(5)]
#print(res)


# list = [(i, i) for i in range(1, 21) if i%2 == 0]  (i, i)
# print(list)


# filter  
# my_list = list(filter(lambda x: x > 10, [124,1,24,65,76]))
# print(my_list)


# zip
# name = ["a","s","d"]
# money = [132,234,3231]

# my_list = dict(zip(name,money))     # или вместо dict = list

# print(my_list)



# enumerate
import tkinter


name = ['a','d','d','j']

my_list = tuple(enumerate(name))

print(my_list)



###1. Напишите программу, удаляющую из текста все слова, содержащие "абв".
##2. Создайте программу для игры с конфетами человек против человека.
##    
##    Условие задачи: На столе лежит 2021 конфета. Играют два игрока делая ход 
#    друг после друга. Первый ход определяется жеребьёвкой. 
##    За один ход можно забрать не более чем 28 конфет. Все конфеты оппонента достаются сделавшему последний ход.
###    Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?
##    
#    a) Добавьте игру против бота
##    
###    b) Подумайте как наделить бота "интеллектом"
##    
#33. Создайте программу для игры в "Крестики-нолики".
##
###4. Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
##
#Входные и выходные данные хранятся в отдельных текстовых файлах.
##qqqrrrrggggvcv
###3q4r4g1v1c1v

#tkinter